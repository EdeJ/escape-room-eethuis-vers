{"version":3,"sources":["keyboard.js","TypeGame.js","ResultButton.js","Tiles.js","DragGame.js","App.js","reportWebVitals.js","index.js"],"names":["Keyboard","id","className","TypeGame","ResultButton","buttenText","status","type","gsap","registerPlugin","Draggable","Tiles","tileData","checkAllCorrect","useState","setButtonText","setStatus","useEffect","clickSound","Howl","src","process","blopSound","winningSound","wrongSound","targets","$","draggables","dragElements","document","querySelectorAll","dropElements","dropTiles","Array","prototype","map","call","element","index","tile","parent","value","dataset","create","bounds","throwProps","onDragStart","e","play","onDrag","this","hitTest","child","i","length","dropTile","classList","add","removeClass","onDragEnd","x","y","rect1","getBoundingClientRect","rect2","left","top","to","duration","allDroped","console","log","getElementById","addEventListener","allCorrect","setTimeout","dragList","dropList","distance","height","css","order","name","DragGame","setFinished","App","preventDefault","passive","showGame","setShowGame","dragGameFinished","setDragGameFinished","isFinished","onClick","style","color","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.b17a011b.chunk.js","sourcesContent":["import React from 'react';\r\nimport './keyboard.css';\r\n\r\nfunction Keyboard() {\r\n    return (\r\n        <div>\r\n            <div id=\"keyboard\">\r\n                <div className=\"inner-board\">\r\n                    {/* <ul class=\"cf\">\r\n                    <li style={{ opacity: 0 }} key=\"1\" ><button className=\"key c27 fn\"><span id=\"esc\">esc</span></button></li>\r\n                    <li style={{ opacity: 0 }} key=\"2\"><button className=\"key c112 fn\"><span>F1</span></button></li>\r\n                    <li style={{ opacity: 0 }} key=\"3\"><button className=\"key c113 fn\"><span>F2</span></button></li>\r\n                    <li style={{ opacity: 0 }} key=\"4\"><button className=\"key c114 fn\"><span>F3</span></button></li>\r\n                    <li style={{ opacity: 0 }} key=\"5\"><button className=\"key c115 fn\"><span>F4</span></button></li>\r\n                    <li style={{ opacity: 0 }} key=\"6\"><button className=\"key c116 fn\"><span>F5</span></button></li>\r\n                    <li style={{ opacity: 0 }} key=\"7\"><button className=\"key c117 fn\"><span>F6</span></button></li>\r\n                    <li style={{ opacity: 0 }} key=\"8\"><button className=\"key c118 fn\"><span>F7</span></button></li>\r\n                    <li style={{ opacity: 0 }} key=\"9\"><button className=\"key c119 fn\"><span>F8</span></button></li>\r\n                    <li style={{ opacity: 0 }} key=\"10\"><button className=\"key c120 fn\"><span>F9</span></button></li>\r\n                    <li style={{ opacity: 0 }} key=\"11\"><button className=\"key c121 fn\"><span>F10</span></button></li>\r\n                    <li style={{ opacity: 0 }} key=\"12\"><button className=\"key c122 fn\"><span>F11</span></button></li>\r\n                    <li style={{ opacity: 0 }} key=\"13\"><button className=\"key c123 fn\"><span>F12</span></button></li>\r\n                    <li style={{ opacity: 0 }} key=\"14\"><button className=\"key fn\"><span>Eject</span></button></li>\r\n                </ul>\r\n                <ul className=\"cf\" id=\"numbers\">\r\n                    <li style={{ opacity: 0 }} ><button className=\"key c192\"><b>~</b><span>`</span></button></li>\r\n                    <li style={{ opacity: 0 }} ><button className=\"key c49\"><b>!</b><span>1</span></button></li>\r\n                    <li style={{ opacity: 0 }} ><button className=\"key c50\"><b>@</b><span>2</span></button></li>\r\n                    <li style={{ opacity: 0 }} ><button className=\"key c51\"><b>#</b><span>3</span></button></li>\r\n                    <li style={{ opacity: 0 }} ><button className=\"key c52\"><b>$</b><span>4</span></button></li>\r\n                    <li style={{ opacity: 0 }} ><button className=\"key c53\"><b>%</b><span>5</span></button></li>\r\n                    <li style={{ opacity: 0 }} ><button className=\"key c54\"><b>^</b><span>6</span></button></li>\r\n                    <li style={{ opacity: 0 }} ><button className=\"key c55\"><b>&amp;</b><span>7</span></button></li>\r\n                    <li style={{ opacity: 0 }} ><button className=\"key c56\"><b>*</b><span>8</span></button></li>\r\n                    <li style={{ opacity: 0 }} ><button className=\"key c57\"><b>(</b><span>9</span></button></li>\r\n                    <li style={{ opacity: 0 }} ><button className=\"key c48\"><b>)</b><span>0</span></button></li>\r\n                    <li style={{ opacity: 0 }} ><button className=\"key c189 alt\"><b>_</b><span>-</span></button></li>\r\n                    <li style={{ opacity: 0 }} ><button className=\"key c187\"><b>+</b><span>=</span></button></li>\r\n                    <li><button className=\"key c46\" id=\"delete\"><span>Delete</span></button></li>\r\n                </ul> */}\r\n                    <ul className=\"cf\" id=\"qwerty\">\r\n                        {/* <li style={{ opacity: 0 }} ><button className=\"key c9\" id=\"tab\"><span>tab</span></button></li> */}\r\n                        <li><button className=\"key c81\"><span>q</span></button></li>\r\n                        <li><button className=\"key c87\"><span>w</span></button></li>\r\n                        <li><button className=\"key c69\"><span>e</span></button></li>\r\n                        <li><button className=\"key c82\"><span>r</span></button></li>\r\n                        <li><button className=\"key c84\"><span>t</span></button></li>\r\n                        <li><button className=\"key c89\"><span>y</span></button></li>\r\n                        <li><button className=\"key c85\"><span>u</span></button></li>\r\n                        <li><button className=\"key c73\"><span>i</span></button></li>\r\n                        <li><button className=\"key c79\"><span>o</span></button></li>\r\n                        <li><button className=\"key c80\"><span>p</span></button></li>\r\n                        {/* <li style={{ opacity: 0 }} ><button className=\"key c219 alt\"><b>&#123;</b><span>[</span></button></li> */}\r\n                        {/* <li style={{ opacity: 0 }} ><button className=\"key c221 alt\"><b>&#125;</b><span>]</span></button></li> */}\r\n                        {/* <li style={{ opacity: 0 }} ><button className=\"key c220 alt\"><b>|</b><span>\\</span></button></li> */}\r\n                        <li><button className=\"key c46\" id=\"delete\"><span>Delete</span></button></li>\r\n                    </ul>\r\n                    <ul className=\"cf\" id=\"asdfg\">\r\n                        {/* <li style={{ opacity: 0 }} ><button className=\"key c20 alt\" id=\"caps\"><b></b><span>caps lock</span></button></li> */}\r\n                        <li><button className=\"key c65\"><span>a</span></button></li>\r\n                        <li><button className=\"key c83\"><span>s</span></button></li>\r\n                        <li><button className=\"key c68\"><span>d</span></button></li>\r\n                        <li><button className=\"key c70\"><span>f</span></button></li>\r\n                        <li><button className=\"key c71\"><span>g</span></button></li>\r\n                        <li><button className=\"key c72\"><span>h</span></button></li>\r\n                        <li><button className=\"key c74\"><span>j</span></button></li>\r\n                        <li><button className=\"key c75\"><span>k</span></button></li>\r\n                        <li><button className=\"key c76\"><span>l</span></button></li>\r\n                        {/* <li style={{ opacity: 0 }} ><button className=\"key c186 alt\"><b>:</b><span>;</span></button></li>\r\n                    <li style={{ opacity: 0 }} ><button className=\"key c222 alt\"><b>\"</b><span>'</span></button></li> */}\r\n                        <li><button className=\"key c13 alt\" id=\"enter\"><span>return</span></button></li>\r\n                    </ul>\r\n                    <ul className=\"cf\" id=\"zxcvb\">\r\n                        {/* <li style={{ opacity: 0 }} ><button className=\"key c16 shiftleft\"><span>Shift</span></button></li> */}\r\n                        <li><button className=\"key c90\"><span>z</span></button></li>\r\n                        <li><button className=\"key c88\"><span>x</span></button></li>\r\n                        <li><button className=\"key c67\"><span>c</span></button></li>\r\n                        <li><button className=\"key c86\"><span>v</span></button></li>\r\n                        <li><button className=\"key c66\"><span>b</span></button></li>\r\n                        <li><button className=\"key c78\"><span>n</span></button></li>\r\n                        <li><button className=\"key c77\"><span>m</span></button></li>\r\n                        {/* <li style={{ opacity: 0 }} ><button className=\"key c188 alt\"><b>&lt;</b><span>,</span></button></li>\r\n                        <li style={{ opacity: 0 }} ><button className=\"key c190 alt\"><b>&gt;</b><span>.</span></button></li>\r\n                        <li style={{ opacity: 0 }} ><button className=\"key c191 alt\"><b>?</b><span>/</span></button></li>\r\n                        <li style={{ opacity: 0 }} ><button className=\"key c16 shiftright\"><span>Shift</span></button></li> */}\r\n                    </ul>\r\n                    {/* <ul className=\"cf\" id=\"bottomrow\">\r\n                    <li><button className=\"key\" id=\"fn\"><span>fn</span></button></li>\r\n                    <li><button className=\"key c17\" id=\"control\"><span>control</span></button></li>\r\n                    <li><button className=\"key option\" id=\"optionleft\"><span>option</span></button></li>\r\n                    <li><button className=\"key command\" id=\"commandleft\"><span>command</span></button></li>\r\n                    <li><button className=\"key c32\" id=\"spacebar\"></button></li>\r\n                    <li><button className=\"key command\" id=\"commandright\"><span>command</span></button></li>\r\n                    <li><button className=\"key option\" id=\"optionright\"><span>option</span></button></li>\r\n                    <ol className=\"cf\">\r\n                        <li><button className=\"key c37\" id=\"left\"><span>&#9666;</span></button></li>\r\n                        <li>\r\n                            <button className=\"key c38\" id=\"up\"><span>&#9652;</span></button>\r\n                            <button className=\"key c40\" id=\"down\"><span>&#9662;</span></button>\r\n                        </li>\r\n                        <li><button className=\"key c39\" id=\"right\"><span>&#9656;</span></button></li>\r\n                    </ol>\r\n                </ul> */}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Keyboard\r\n","import React from 'react';\r\nimport Keyboard from './keyboard';\r\n\r\n\r\nfunction TypeGame() {\r\n    return (\r\n        <div>\r\n            <Keyboard />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TypeGame\r\n","import React from 'react'\r\n\r\nfunction ResultButton({ buttenText, status }) {\r\n\r\n    return (\r\n        <button\r\n            id=\"check\"\r\n            type=\"button\"\r\n            className={`btn btn-lg btn-primary ${status}`}\r\n        >\r\n            {buttenText}\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default ResultButton\r\n","import React, { useEffect, useState } from 'react'\r\nimport $ from 'jquery';\r\nimport { ArrowsMove } from 'react-bootstrap-icons';\r\n// import 'bootstrap/dist/css/bootstrap.css';\r\nimport { Howl, Howler } from 'howler';\r\nimport gsap from 'gsap';\r\nimport Draggable from \"gsap/Draggable\";\r\nimport './App.css';\r\nimport ResultButton from './ResultButton';\r\n\r\ngsap.registerPlugin(Draggable);\r\n\r\nfunction Tiles({ tileData, checkAllCorrect }) {\r\n\r\n    const [buttenText, setButtonText] = useState('Controleer Antwoord');\r\n\r\n    const [allTilesDroped, setAllTilesDroped] = useState(false);\r\n    const [status, setStatus] = useState('hidden');\r\n\r\n    useEffect(() => {\r\n\r\n        //TODO make AUDIO SPRITES\r\n        const clickSound = new Howl({\r\n            src: [`${process.env.PUBLIC_URL}/sounds/click.mp3`]\r\n        });\r\n        const blopSound = new Howl({\r\n            src: [`${process.env.PUBLIC_URL}/sounds/blop.mp3`]\r\n        });\r\n        const winningSound = new Howl({\r\n            src: [`${process.env.PUBLIC_URL}/sounds/winning.mp3`]\r\n        });\r\n        const wrongSound = new Howl({\r\n            src: [`${process.env.PUBLIC_URL}/sounds/wrong.mp3`]\r\n        });\r\n\r\n        const overlapThreshold = \"10%\";\r\n\r\n        const targets = $(\".target\");\r\n        const draggables = $('.draggable');\r\n\r\n        const dragElements = document.querySelectorAll(\".draggable\");\r\n        const dropElements = document.querySelectorAll(\".target\");\r\n\r\n        const dragTiles = Array.prototype.map.call(dragElements, createDragTile);\r\n        const dropTiles = Array.prototype.map.call(dropElements, createDropTile);\r\n\r\n        console.log(dropTiles);\r\n\r\n        const checkButton = document.getElementById('check');\r\n        checkButton.addEventListener(\"click\", checkTiles);\r\n\r\n\r\n        function checkTiles() {\r\n            let allCorrect = true;\r\n\r\n            for (let i = 0; i < dropTiles.length; i++) {\r\n                const tile = dropTiles[i];\r\n                if (!tile.child) {\r\n                    allCorrect = false;\r\n                    continue;\r\n                }\r\n                if (tile.element.id !== tile.child.element.id) {\r\n                    console.log('false');\r\n                    allCorrect = false;\r\n                }\r\n\r\n            }\r\n            if (allCorrect) {\r\n                winningSound.play();\r\n                setButtonText('Goed');\r\n                setStatus('correct');\r\n                setTimeout(function () { checkAllCorrect(true); }, 3000);\r\n            } else {\r\n                wrongSound.play();\r\n                setButtonText('Antwoord onjuist');\r\n                setStatus('wrong');\r\n                checkAllCorrect(false);\r\n            }\r\n        }\r\n\r\n        function createDropTile(element, index) {\r\n            const tile = {\r\n                element: element,\r\n                child: null,\r\n                value: element.dataset.value\r\n            };\r\n            return tile;\r\n        }\r\n\r\n        let top = 30; // de helft van de hoogte van een draggable, om het te centreren.\r\n        const dragList = $('#drag-list');\r\n        const dropList = $('#drop-list');\r\n        const distance = $('#shared-lists').height() / 4;\r\n\r\n        for (let i = 0; i < draggables.length; i++) {\r\n            $(draggables[i]).css({ \"position\": \"absolute\", \"top\": `${top}px`, \"left\": `${dragList.left}px` });\r\n            $(targets[i]).css({ \"position\": \"absolute\", \"top\": `${top}px`, \"left\": `${dropList.left}px` });\r\n            top = top + distance;\r\n        }\r\n\r\n\r\n\r\n        function createDragTile(element, index) {\r\n\r\n            const tile = {\r\n                element: element,\r\n                parent: null,\r\n                value: element.dataset.value\r\n            };\r\n\r\n            Draggable.create(element, {\r\n                bounds: \"#content\",\r\n                // edgeResistance: 0.65,\r\n                type: \"x,y\",\r\n                throwProps: true,\r\n                onDragStart: function (e) {\r\n                    clickSound.play();\r\n                    // element.classList.remove(\"correct\", \"wrong\");\r\n                },\r\n\r\n                onDrag: function (e) {\r\n                    // clickSound.play();\r\n                    let parent = tile.parent;\r\n                    if (parent) {\r\n                        if (this.hitTest(parent.element, overlapThreshold)) {\r\n                            // exit the function\r\n                            // tile is still hitting parent, so no need to proceed any further.\r\n                            return;\r\n                        }\r\n                        // tile is no longer hitting parent, so clear any references between the two\r\n                        parent = tile.parent = parent.child = null;\r\n                    }\r\n\r\n                    for (let i = 0; i < dropTiles.length; i++) {\r\n                        const dropTile = dropTiles[i];\r\n                        if (dropTile.child) {\r\n                            // continue to next loop iteration\r\n                            // drop tile already has a child, so no need to proceed any further\r\n                            continue;\r\n                        }\r\n\r\n                        if (this.hitTest(dropTile.element, overlapThreshold)) {\r\n\r\n                            // we hit an empty drop tile, so link the two together and exit the function\r\n                            tile.parent = dropTile;\r\n                            dropTile.child = tile;\r\n                            tile.parent.element.classList.add(\"hitting\");\r\n                            return;\r\n                        }\r\n                    }\r\n                    // if we made it this far, we're not hitting an empty drop tile\r\n                    targets.removeClass(\"hitting\");\r\n                },\r\n\r\n                onDragEnd: function () {\r\n                    // const p = $(element).position();\r\n                    // let x = p.x;\r\n                    // let y = p.y;\r\n                    let x = 0;\r\n                    let y = 0;\r\n\r\n                    // move to parent\r\n                    if (tile.parent) {\r\n                        blopSound.play();\r\n                        const rect1 = element.getBoundingClientRect();\r\n                        const rect2 = tile.parent.element.getBoundingClientRect();\r\n\r\n                        x = \"+=\" + (rect2.left - rect1.left);\r\n                        y = \"+=\" + (rect2.top - rect1.top);\r\n                    }\r\n                    gsap.to(element, { duration: 0.2, x: x, y: y });\r\n\r\n                    // Als alle tile gelegd zijn\r\n                    let allDroped = true;\r\n                    for (let i = 0; i < dropTiles.length; i++) {\r\n                        const tile = dropTiles[i];\r\n                        if (!tile.child) {\r\n                            allDroped = false;\r\n                            continue;\r\n                        }\r\n                    }\r\n                    // allDroped ? setAllTilesDroped(true) : setAllTilesDroped(false);\r\n                    if (allDroped) {\r\n                        setStatus('')\r\n                    } else {\r\n                        setStatus('hidden');\r\n                        setButtonText('Controleer Antwoord');\r\n                    }\r\n\r\n                    return tile;\r\n                }\r\n            });\r\n        }\r\n\r\n    }, []);\r\n\r\n    return (\r\n        <div id=\"content\">\r\n            <div id=\"shared-lists\">\r\n                <div className=\"list-box\" id=\"drag-list\" >\r\n                    {tileData.map((tile, i) => (\r\n                        <div key={i} id={tile.order} className=\"box draggable\">{tile.name}<ArrowsMove className='arrow' /></div>\r\n                    ))}\r\n                    <ResultButton buttenText={buttenText} status={status} />\r\n                </div>\r\n                <div className=\"list-box\" id=\"drop-list\">\r\n                    {tileData.map((tile, i) => (\r\n                        <div key={i} id={i} className=\"box target\"></div>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Tiles\r\n","import React, { useState } from 'react'\r\nimport Tiles from './Tiles';\r\n\r\nfunction DragGame({ setFinished }) {\r\n    const tileData = [\r\n        {\r\n            order: 2,\r\n            name: 'Latte (3)'\r\n        }, {\r\n            order: 0,\r\n            name: 'Espresso macchiato (1)'\r\n        },\r\n        {\r\n            order: 3,\r\n            name: 'Cortado (4)'\r\n        },\r\n        {\r\n            order: 1,\r\n            name: 'Cappucino (2)'\r\n        }\r\n    ];\r\n\r\n    // const [allCorrect, setAllcorrect] = useState(false);\r\n\r\n    // function checkAllCorrect(allCorrect) {\r\n    //     allCorrect ? setAllcorrect(true) : setAllcorrect(false);\r\n    //     allCorrect ? setFinished(true) : setFinished(false);\r\n    // }\r\n\r\n    return (\r\n        <>\r\n            <header>\r\n                {/* <div>all Correct: {allCorrect ? 'YES' : 'NO'}</div> */}\r\n                <h4>1. Zet de volgende koffiesoorten in de volgorde van hoeveelheid melk (versie 8-11)</h4>\r\n            </header>\r\n            <Tiles\r\n                tileData={tileData}\r\n                checkAllCorrect={setFinished}\r\n            />\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default DragGame\r\n","import { useState } from 'react';\r\nimport TypeGame from './TypeGame';\r\nimport DragGame from './DragGame';\r\n\r\nfunction App() {\r\n\r\n  // prevent scrolling\r\n  function preventBehavior(e) {\r\n    e.preventDefault();\r\n  }\r\n  document.addEventListener(\"touchmove\", preventBehavior, { passive: false });\r\n\r\n  const [showGame, setShowGame] = useState(0);\r\n  const [dragGameFinished, setDragGameFinished] = useState(false);\r\n\r\n  function setFinished(isFinished) {\r\n    if (isFinished) {\r\n      setDragGameFinished(true);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {showGame === 1 || (\r\n        <button onClick={() => setShowGame(1)} type=\"button\" className=\"btn btn-lg btn-primary\">play drag game</button>\r\n      )}\r\n      {showGame === 2 || (\r\n        <button onClick={() => setShowGame(2)} type=\"button\" className=\"btn btn-lg btn-primary\">play type game</button>\r\n      )}\r\n      {showGame === 1 && <DragGame setFinished={setFinished} />}\r\n      {showGame === 2 && <TypeGame setFinished={setFinished} />}\r\n      {dragGameFinished && <h1 style={{ color: 'white' }} >drag game finished!</h1>}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}