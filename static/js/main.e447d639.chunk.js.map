{"version":3,"sources":["SamplePlayer.js","Header.js","KeyboardButton.js","Keyboard.js","ResultButton.js","TypeGame.js","Tiles.js","DragGame.js","SelectGame.js","App.js","reportWebVitals.js","index.js"],"names":["player1","player2","player3","player4","buffer","Buffer","process","buff","get","Player","toDestination","Sounds","prototype","play","sample","start","Header","setShowGame","headerText","sounds","className","onClick","size","KeyboardButton","keyName","keyPressed","value","e","currentTarget","Keyboard","id","ResultButton","buttenText","status","type","TypeGame","setFinished","useState","text","setText","setButtonText","setStatus","checkAnswer","word","evaluateWrong","console","log","replace","key","slice","gsap","registerPlugin","Draggable","Tiles","tileData","useEffect","targets","$","draggables","dragElements","document","querySelectorAll","dropElements","dropTiles","Array","map","call","element","index","tile","parent","dataset","create","bounds","throwProps","onPress","onDrag","this","hitTest","child","i","length","dropTile","classList","add","removeClass","onDragEnd","x","y","rect1","getBoundingClientRect","rect2","left","top","to","duration","allDroped","checkTiles","allCorrect","getElementById","addEventListener","dragList","dropList","distance","height","css","order","name","DragGame","SelectGame","checked","countries","setCountries","winningCountries","isAllChecked","count","forEach","item","checkAnswers","gameWinning","includes","country","updateCountries","App","preventDefault","passive","showGame","dragGame","typeGame","selectGame","finishedGames","setFinishedGames","game","setTimeout","class","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.e447d639.chunk.js","sourcesContent":["import { Player, Buffer } from 'tone';\r\n\r\nlet player1;\r\nlet player2;\r\nlet player3;\r\nlet player4;\r\n\r\n\r\nconst buffer = new Buffer(`${process.env.PUBLIC_URL}/sounds/sounds.mp3`, function () {\r\n    const buff = buffer.get();\r\n    player1 = new Player(buff).toDestination();\r\n    player2 = new Player(buff).toDestination();\r\n    player3 = new Player(buff).toDestination();\r\n    player4 = new Player(buff).toDestination();\r\n});\r\n\r\n\r\nconst Sounds = function () {\r\n    Sounds.prototype.play = (sample) => {\r\n        switch (sample) {\r\n            case 'blop':\r\n                player1.start('0', '0', '1');\r\n                break;\r\n            case 'click':\r\n                player2.start('0', '1', '1');\r\n                break;\r\n            case 'correct':\r\n                player3.start('0', '2', '1');\r\n                break;\r\n            case 'wrong':\r\n                player4.start('0', '3', '1');\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n}\r\nexport default Sounds;","import React from 'react'\r\nimport { ArrowLeftShort } from 'react-bootstrap-icons'\r\nimport Sounds from './SamplePlayer'\r\n\r\nfunction Header({ setShowGame, headerText }) {\r\n    const sounds = new Sounds();\r\n\r\n    return (\r\n        <header>\r\n            <button className=\"backBtn\"\r\n                onClick={() => {\r\n                    setShowGame(0);\r\n                    sounds.play('click');\r\n                }}\r\n            ><ArrowLeftShort size={40} />\r\n            Terug\r\n            </button>\r\n            <h2>{headerText}</h2>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header\r\n\r\n\r\n","import React from 'react'\r\nimport Sounds from './SamplePlayer';\r\n\r\nfunction KeyboardButton({ keyName, keyPressed }) {\r\n\r\n    const sounds = new Sounds();\r\n\r\n    return (\r\n        <li key={keyName}>\r\n            <button\r\n                value={keyName}\r\n                className={`key ${keyName}`}\r\n                onClick={(e) => {\r\n                    keyPressed(e.currentTarget.value);\r\n                    sounds.play('click');\r\n                }\r\n                }\r\n            >\r\n                <span>{keyName === 'spacebar' || keyName}</span>\r\n            </button>\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default KeyboardButton\r\n","import React from 'react';\r\nimport './keyboard.css';\r\nimport KeyboardButton from './KeyboardButton';\r\n\r\nfunction Keyboard({ keyPressed }) {\r\n    return (\r\n        <div>\r\n            <div id=\"keyboard\">\r\n                <div className=\"inner-board\">\r\n                    {/* <ul class=\"cf\">\r\n                    <li style={{ opacity: 0 }} key=\"1\" ><button className=\"key c27 fn\"><span id=\"esc\">esc</span></button></li>\r\n                    <li style={{ opacity: 0 }} key=\"2\"><button className=\"key c112 fn\"><span>F1</span></button></li>\r\n                    <li style={{ opacity: 0 }} key=\"3\"><button className=\"key c113 fn\"><span>F2</span></button></li>\r\n                    <li style={{ opacity: 0 }} key=\"4\"><button className=\"key c114 fn\"><span>F3</span></button></li>\r\n                    <li style={{ opacity: 0 }} key=\"5\"><button className=\"key c115 fn\"><span>F4</span></button></li>\r\n                    <li style={{ opacity: 0 }} key=\"6\"><button className=\"key c116 fn\"><span>F5</span></button></li>\r\n                    <li style={{ opacity: 0 }} key=\"7\"><button className=\"key c117 fn\"><span>F6</span></button></li>\r\n                    <li style={{ opacity: 0 }} key=\"8\"><button className=\"key c118 fn\"><span>F7</span></button></li>\r\n                    <li style={{ opacity: 0 }} key=\"9\"><button className=\"key c119 fn\"><span>F8</span></button></li>\r\n                    <li style={{ opacity: 0 }} key=\"10\"><button className=\"key c120 fn\"><span>F9</span></button></li>\r\n                    <li style={{ opacity: 0 }} key=\"11\"><button className=\"key c121 fn\"><span>F10</span></button></li>\r\n                    <li style={{ opacity: 0 }} key=\"12\"><button className=\"key c122 fn\"><span>F11</span></button></li>\r\n                    <li style={{ opacity: 0 }} key=\"13\"><button className=\"key c123 fn\"><span>F12</span></button></li>\r\n                    <li style={{ opacity: 0 }} key=\"14\"><button className=\"key fn\"><span>Eject</span></button></li>\r\n                </ul>\r\n                <ul className=\"cf\" id=\"numbers\">\r\n                    <li style={{ opacity: 0 }} ><button className=\"key c192\"><b>~</b><span>`</span></button></li>\r\n                    <li style={{ opacity: 0 }} ><button className=\"key c49\"><b>!</b><span>1</span></button></li>\r\n                    <li style={{ opacity: 0 }} ><button className=\"key c50\"><b>@</b><span>2</span></button></li>\r\n                    <li style={{ opacity: 0 }} ><button className=\"key c51\"><b>#</b><span>3</span></button></li>\r\n                    <li style={{ opacity: 0 }} ><button className=\"key c52\"><b>$</b><span>4</span></button></li>\r\n                    <li style={{ opacity: 0 }} ><button className=\"key c53\"><b>%</b><span>5</span></button></li>\r\n                    <li style={{ opacity: 0 }} ><button className=\"key c54\"><b>^</b><span>6</span></button></li>\r\n                    <li style={{ opacity: 0 }} ><button className=\"key c55\"><b>&amp;</b><span>7</span></button></li>\r\n                    <li style={{ opacity: 0 }} ><button className=\"key c56\"><b>*</b><span>8</span></button></li>\r\n                    <li style={{ opacity: 0 }} ><button className=\"key c57\"><b>(</b><span>9</span></button></li>\r\n                    <li style={{ opacity: 0 }} ><button className=\"key c48\"><b>)</b><span>0</span></button></li>\r\n                    <li style={{ opacity: 0 }} ><button className=\"key c189 alt\"><b>_</b><span>-</span></button></li>\r\n                    <li style={{ opacity: 0 }} ><button className=\"key c187\"><b>+</b><span>=</span></button></li>\r\n                    <li><button className=\"key c46\" id=\"delete\"><span>Delete</span></button></li>\r\n                </ul> */}\r\n                    <ul className=\"cf\" id=\"qwerty\">\r\n                        {/* <li style={{ opacity: 0 }} ><button className=\"key c9\" id=\"tab\"><span>tab</span></button></li> */}\r\n                        <KeyboardButton keyName={'q'} keyPressed={keyPressed} />\r\n                        <KeyboardButton keyName={'w'} keyPressed={keyPressed} />\r\n                        <KeyboardButton keyName={'e'} keyPressed={keyPressed} />\r\n                        <KeyboardButton keyName={'r'} keyPressed={keyPressed} />\r\n                        <KeyboardButton keyName={'t'} keyPressed={keyPressed} />\r\n                        <KeyboardButton keyName={'y'} keyPressed={keyPressed} />\r\n                        <KeyboardButton keyName={'u'} keyPressed={keyPressed} />\r\n                        <KeyboardButton keyName={'i'} keyPressed={keyPressed} />\r\n                        <KeyboardButton keyName={'o'} keyPressed={keyPressed} />\r\n                        <KeyboardButton keyName={'p'} keyPressed={keyPressed} />\r\n                        {/* <li style={{ opacity: 0 }} ><button className=\"key c219 alt\"><b>&#123;</b><span>[</span></button></li> */}\r\n                        {/* <li style={{ opacity: 0 }} ><button className=\"key c221 alt\"><b>&#125;</b><span>]</span></button></li> */}\r\n                        {/* <li style={{ opacity: 0 }} ><button className=\"key c220 alt\"><b>|</b><span>\\</span></button></li> */}\r\n                        {/* <li><button className=\"key c46\" id=\"delete\"><span>Delete</span></button></li> */}\r\n                        <KeyboardButton keyName={'delete'} keyPressed={keyPressed} />\r\n                    </ul>\r\n                    <ul className=\"cf\" id=\"asdfg\">\r\n                        {/* <li style={{ opacity: 0 }} ><button className=\"key c20 alt\" id=\"caps\"><b></b><span>caps lock</span></button></li> */}\r\n                        <KeyboardButton keyName={'a'} keyPressed={keyPressed} />\r\n                        <KeyboardButton keyName={'s'} keyPressed={keyPressed} />\r\n                        <KeyboardButton keyName={'d'} keyPressed={keyPressed} />\r\n                        <KeyboardButton keyName={'f'} keyPressed={keyPressed} />\r\n                        <KeyboardButton keyName={'g'} keyPressed={keyPressed} />\r\n                        <KeyboardButton keyName={'h'} keyPressed={keyPressed} />\r\n                        <KeyboardButton keyName={'j'} keyPressed={keyPressed} />\r\n                        <KeyboardButton keyName={'k'} keyPressed={keyPressed} />\r\n                        <KeyboardButton keyName={'l'} keyPressed={keyPressed} />\r\n\r\n                        {/* <li style={{ opacity: 0 }} ><button className=\"key c186 alt\"><b>:</b><span>;</span></button></li>\r\n                    <li style={{ opacity: 0 }} ><button className=\"key c222 alt\"><b>\"</b><span>'</span></button></li> */}\r\n                        {/* <li><button className=\"key c13 alt\" id=\"enter\"><span>return</span></button></li> */}\r\n                        <KeyboardButton keyName={'Enter'} keyPressed={keyPressed} />\r\n                    </ul>\r\n                    <ul className=\"cf\" id=\"zxcvb\">\r\n                        {/* <li style={{ opacity: 0 }} ><button className=\"key c16 shiftleft\"><span>Shift</span></button></li> */}\r\n                        <KeyboardButton keyName={'z'} keyPressed={keyPressed} />\r\n                        <KeyboardButton keyName={'x'} keyPressed={keyPressed} />\r\n                        <KeyboardButton keyName={'c'} keyPressed={keyPressed} />\r\n                        <KeyboardButton keyName={'v'} keyPressed={keyPressed} />\r\n                        <KeyboardButton keyName={'b'} keyPressed={keyPressed} />\r\n                        <KeyboardButton keyName={'n'} keyPressed={keyPressed} />\r\n                        <KeyboardButton keyName={'m'} keyPressed={keyPressed} />\r\n\r\n                        {/* <li style={{ opacity: 0 }} ><button className=\"key c188 alt\"><b>&lt;</b><span>,</span></button></li>\r\n                        <li style={{ opacity: 0 }} ><button className=\"key c190 alt\"><b>&gt;</b><span>.</span></button></li>\r\n                        <li style={{ opacity: 0 }} ><button className=\"key c191 alt\"><b>?</b><span>/</span></button></li>\r\n                        <li style={{ opacity: 0 }} ><button className=\"key c16 shiftright\"><span>Shift</span></button></li> */}\r\n                    </ul>\r\n                    <ul className=\"cf\" id=\"bottomrow\">\r\n                        {/* <li><button className=\"key\" id=\"fn\"><span>fn</span></button></li>\r\n                    <li><button className=\"key c17\" id=\"control\"><span>control</span></button></li>\r\n                    <li><button className=\"key option\" id=\"optionleft\"><span>option</span></button></li>\r\n                    <li><button className=\"key command\" id=\"commandleft\"><span>command</span></button></li> */}\r\n                        <KeyboardButton id=\"spacebar\" keyName={'spacebar'} keyPressed={keyPressed} />\r\n                        {/* <li><button className=\"key command\" id=\"commandright\"><span>command</span></button></li>\r\n                    <li><button className=\"key option\" id=\"optionright\"><span>option</span></button></li>\r\n                    <ol className=\"cf\">\r\n                        <li><button className=\"key c37\" id=\"left\"><span>&#9666;</span></button></li>\r\n                        <li>\r\n                            <button className=\"key c38\" id=\"up\"><span>&#9652;</span></button>\r\n                            <button className=\"key c40\" id=\"down\"><span>&#9662;</span></button>\r\n                        </li>\r\n                        <li><button className=\"key c39\" id=\"right\"><span>&#9656;</span></button></li>\r\n                    </ol> */}\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Keyboard\r\n","import React from 'react'\r\nimport { Check, X } from 'react-bootstrap-icons'\r\n\r\nfunction ResultButton({ buttenText, status }) {\r\n\r\n    return (\r\n        <button\r\n            id=\"check\"\r\n            type=\"button\"\r\n            className={`btn btn-lg btn-primary ${status}`}\r\n        >\r\n            <span>{buttenText}</span>\r\n            {status === 'correct' && <Check size={60} />}\r\n            {status === 'wrong' && <X size={60} />}\r\n\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default ResultButton\r\n","import React, { useState } from 'react';\r\nimport Header from './Header';\r\nimport Keyboard from './Keyboard';\r\nimport ResultButton from './ResultButton';\r\nimport Sounds from './SamplePlayer';\r\nimport './type-game.css';\r\n\r\nfunction TypeGame({ setShowGame, setFinished }) {\r\n\r\n    const winningWord = 'kopiluwak';\r\n    const [text, setText] = useState('');\r\n    // const [message, setMessage] = useState('');\r\n    const sounds = new Sounds();\r\n\r\n    const [buttenText, setButtonText] = useState('Controleer Antwoord');\r\n    const [status, setStatus] = useState('hidden');\r\n\r\n\r\n\r\n    function keyPressed(key) {\r\n        switch (key) {\r\n            case 'delete':\r\n                setStatus('hidden');\r\n                setText(text.slice(0, -1));\r\n                checkAnswer(text.slice(0, -1));\r\n                break;\r\n            case 'Enter':\r\n                checkAnswer(text, true);\r\n                break;\r\n            case 'spacebar':\r\n                setText(text + ' ');\r\n                break;\r\n            default:\r\n                setText(text + key);\r\n                checkAnswer(text + key);\r\n                break;\r\n        }\r\n    }\r\n\r\n    function checkAnswer(word, evaluateWrong) {\r\n        console.log(word.replace(' ', ''));\r\n        if (word.replace(' ', '') === winningWord) {\r\n            // setMessage('Goed');\r\n            setStatus('correct');\r\n            setButtonText('Goed');\r\n            sounds.play('correct');\r\n            setFinished('typeGame');\r\n        } else if (evaluateWrong) {\r\n            setStatus('wrong');\r\n            setButtonText('Antwoord onjuist');\r\n            // setMessage('Antwoord onjuist');\r\n            sounds.play('wrong');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div id=\"type-game\">\r\n            <Header\r\n                setShowGame={setShowGame}\r\n                headerText={'Hoe heet de duurste koffie ter wereld?'}\r\n            />\r\n\r\n            <div id=\"text-field\">\r\n                {text}\r\n                <div className=\"center\">\r\n                    <ResultButton buttenText={buttenText} status={status} />\r\n                </div>\r\n            </div>\r\n            <Keyboard keyPressed={keyPressed} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TypeGame\r\n","import React, { useEffect, useState } from 'react'\r\nimport $ from 'jquery';\r\nimport { ArrowsMove, Check } from 'react-bootstrap-icons';\r\n// import 'bootstrap/dist/css/bootstrap.css';\r\nimport gsap from 'gsap';\r\nimport Draggable from \"gsap/Draggable\";\r\nimport './App.css';\r\nimport ResultButton from './ResultButton';\r\nimport Sounds from './SamplePlayer';\r\n\r\n\r\ngsap.registerPlugin(Draggable);\r\nconst sounds = new Sounds();\r\n\r\n\r\nfunction Tiles({ tileData, setFinished }) {\r\n\r\n    const [buttenText, setButtonText] = useState('Controleer Antwoord');\r\n\r\n    const [allTilesDroped, setAllTilesDroped] = useState(false);\r\n    const [status, setStatus] = useState('hidden');\r\n\r\n    useEffect(() => {\r\n\r\n        const overlapThreshold = \"10%\";\r\n\r\n        const targets = $(\".target\");\r\n        const draggables = $('.draggable');\r\n\r\n        const dragElements = document.querySelectorAll(\".draggable\");\r\n        const dropElements = document.querySelectorAll(\".target\");\r\n\r\n        const dragTiles = Array.prototype.map.call(dragElements, createDragTile);\r\n        const dropTiles = Array.prototype.map.call(dropElements, createDropTile);\r\n\r\n        const checkButton = document.getElementById('check');\r\n        checkButton.addEventListener(\"click\", checkTiles);\r\n\r\n\r\n        function checkTiles() {\r\n            let allCorrect = true;\r\n\r\n            for (let i = 0; i < dropTiles.length; i++) {\r\n                const tile = dropTiles[i];\r\n                if (!tile.child) {\r\n                    allCorrect = false;\r\n                    continue;\r\n                }\r\n                if (tile.element.id !== tile.child.element.id) {\r\n                    allCorrect = false;\r\n                }\r\n\r\n            }\r\n            if (allCorrect) {\r\n                sounds.play('correct');\r\n                setButtonText('Goed');\r\n                setStatus('correct');\r\n                setFinished('dragGame');\r\n                //  setTimeout(function () { checkAllCorrect(true); }, 3000);\r\n            } else {\r\n                sounds.play('wrong');\r\n                setButtonText('Antwoord onjuist');\r\n                setStatus('wrong');\r\n                //   checkAllCorrect(false);\r\n            }\r\n        }\r\n\r\n        function createDropTile(element, index) {\r\n            const tile = {\r\n                element: element,\r\n                child: null,\r\n                value: element.dataset.value\r\n            };\r\n            return tile;\r\n        }\r\n\r\n        let top = 30; // de helft van de hoogte van een draggable, om het te centreren.\r\n        const dragList = $('#drag-list');\r\n        const dropList = $('#drop-list');\r\n        const distance = $('#shared-lists').height() / 4;\r\n\r\n        for (let i = 0; i < draggables.length; i++) {\r\n            $(draggables[i]).css({ \"position\": \"absolute\", \"top\": `${top}px`, \"left\": `${dragList.left}px` });\r\n            $(targets[i]).css({ \"position\": \"absolute\", \"top\": `${top}px`, \"left\": `${dropList.left}px` });\r\n            top = top + distance;\r\n        }\r\n\r\n\r\n\r\n        function createDragTile(element, index) {\r\n\r\n            const tile = {\r\n                element: element,\r\n                parent: null,\r\n                value: element.dataset.value\r\n            };\r\n\r\n            Draggable.create(element, {\r\n                bounds: \"#content\",\r\n                // edgeResistance: 0.65,\r\n                type: \"x,y\",\r\n                throwProps: true,\r\n                onPress: () => {\r\n                    sounds.play('click');\r\n                },\r\n                onDrag: function (e) {\r\n                    // clickSound.play();\r\n                    let parent = tile.parent;\r\n                    if (parent) {\r\n                        if (this.hitTest(parent.element, overlapThreshold)) {\r\n                            // exit the function\r\n                            // tile is still hitting parent, so no need to proceed any further.\r\n                            return;\r\n                        }\r\n                        // tile is no longer hitting parent, so clear any references between the two\r\n                        parent = tile.parent = parent.child = null;\r\n                    }\r\n\r\n                    for (let i = 0; i < dropTiles.length; i++) {\r\n                        const dropTile = dropTiles[i];\r\n                        if (dropTile.child) {\r\n                            // continue to next loop iteration\r\n                            // drop tile already has a child, so no need to proceed any further\r\n                            continue;\r\n                        }\r\n\r\n                        if (this.hitTest(dropTile.element, overlapThreshold)) {\r\n\r\n                            // we hit an empty drop tile, so link the two together and exit the function\r\n                            tile.parent = dropTile;\r\n                            dropTile.child = tile;\r\n                            tile.parent.element.classList.add(\"hitting\");\r\n                            return;\r\n                        }\r\n                    }\r\n                    // if we made it this far, we're not hitting an empty drop tile\r\n                    targets.removeClass(\"hitting\");\r\n                },\r\n\r\n                onDragEnd: function () {\r\n                    // const p = $(element).position();\r\n                    // let x = p.x;\r\n                    // let y = p.y;\r\n                    let x = 0;\r\n                    let y = 0;\r\n\r\n                    // move to parent\r\n                    if (tile.parent) {\r\n                        sounds.play('blop');\r\n                        const rect1 = element.getBoundingClientRect();\r\n                        const rect2 = tile.parent.element.getBoundingClientRect();\r\n\r\n                        x = \"+=\" + (rect2.left - rect1.left);\r\n                        y = \"+=\" + (rect2.top - rect1.top);\r\n                    }\r\n                    gsap.to(element, { duration: 0.2, x: x, y: y });\r\n\r\n                    // Als alle tiles gelegd zijn\r\n                    let allDroped = true;\r\n                    for (let i = 0; i < dropTiles.length; i++) {\r\n                        const tile = dropTiles[i];\r\n                        if (!tile.child) {\r\n                            allDroped = false;\r\n                            continue;\r\n                        }\r\n                    }\r\n                    // allDroped ? setAllTilesDroped(true) : setAllTilesDroped(false);\r\n                    if (allDroped) {\r\n                        setStatus('');\r\n                        checkTiles();\r\n                    } else {\r\n                        setStatus('hidden');\r\n                        setButtonText('Controleer Antwoord');\r\n                    }\r\n\r\n                    return tile;\r\n                }\r\n            });\r\n        }\r\n\r\n    }, []);\r\n\r\n    return (\r\n        <div id=\"content\">\r\n            <div id=\"shared-lists\">\r\n                <div className=\"list-box\" id=\"drag-list\" >\r\n                    {tileData.map((tile, i) => (\r\n                        <div key={i} id={tile.order} className=\"box draggable\">{tile.name}<ArrowsMove className='arrow' /></div>\r\n                    ))}\r\n                    <ResultButton buttenText={buttenText} status={status} />\r\n                </div>\r\n                <div className=\"list-box\" id=\"drop-list\">\r\n                    {tileData.map((tile, i) => (\r\n                        <div key={i} id={i} className=\"box target\"></div>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Tiles\r\n","import React from 'react'\r\nimport Header from './Header';\r\nimport Tiles from './Tiles';\r\n\r\nfunction DragGame({ setShowGame, setFinished }) {\r\n    const tileData = [\r\n        {\r\n            order: 2,\r\n            name: 'Latte (3)'\r\n        }, {\r\n            order: 0,\r\n            name: 'Espresso macchiato (1)'\r\n        },\r\n        {\r\n            order: 3,\r\n            name: 'Cortado (4)'\r\n        },\r\n        {\r\n            order: 1,\r\n            name: 'Cappucino (2)'\r\n        }\r\n    ];\r\n\r\n    return (\r\n        <>\r\n            <Header\r\n                setShowGame={setShowGame}\r\n                headerText={'Zet de volgende koffiesoorten in de volgorde van hoeveelheid melk'}\r\n            />\r\n            <Tiles\r\n                tileData={tileData}\r\n                setFinished={setFinished}\r\n            />\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default DragGame\r\n","import React, { useState } from 'react';\r\nimport { CheckSquare, Square } from 'react-bootstrap-icons';\r\nimport Header from './Header';\r\nimport ResultButton from './ResultButton';\r\nimport Sounds from './SamplePlayer';\r\nimport './SelectGame.css';\r\n\r\nfunction SelectGame({ setShowGame, setFinished }) {\r\n\r\n    const [countries, setCountries] = useState([\r\n        { name: 'Brazil', checked: false },\r\n        { name: 'Vietnam', checked: false },\r\n        { name: 'Ethiopia', checked: false },\r\n        { name: 'Indonesia', checked: false },\r\n        { name: 'Jordan', checked: false },\r\n        { name: 'Canada', checked: false },\r\n        { name: 'Italy', checked: false },\r\n        { name: 'Spain', checked: false }\r\n    ]);\r\n\r\n    const winningCountries = ['Brazil', 'Vietnam', 'Ethiopia', 'Indonesia'];\r\n\r\n    const sounds = new Sounds();\r\n\r\n    const [buttenText, setButtonText] = useState('Controleer Antwoord');\r\n    const [status, setStatus] = useState('hidden');\r\n\r\n    const [text, setText] = useState();\r\n\r\n    function isAllChecked() {\r\n        let count = 0;\r\n        countries.forEach(item => {\r\n            if (item.checked) {\r\n                count++;\r\n            }\r\n        });\r\n        if (count === 4) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    function checkAnswers() {\r\n        let gameWinning = true;\r\n        countries.forEach(item => {\r\n            if (item.checked) {\r\n                if (!winningCountries.includes(item.name)) {\r\n                    gameWinning = false;\r\n                }\r\n            }\r\n        });\r\n        return gameWinning;\r\n    }\r\n\r\n    return (\r\n        <div id=\"select-game\">\r\n            <Header\r\n                setShowGame={setShowGame}\r\n                headerText={'Welke van de volgende landen produceren koffie?'}\r\n            />\r\n            <div id=\"game-content\">\r\n                {text}\r\n                <div className=\"center\">\r\n                    <ResultButton buttenText={buttenText} status={status} />\r\n                </div>\r\n                <div id=\"countries\">\r\n                    {countries.map((country, i) => (\r\n                        <div\r\n                            key={i}\r\n                            className=\"box draggable\"\r\n                            onClick={() => {\r\n                                const updateCountries = [...countries];\r\n                                if (countries[i].checked) {\r\n                                    sounds.play('click');\r\n                                    updateCountries[i].checked = false;\r\n                                    setCountries(updateCountries);\r\n                                } else if (!isAllChecked()) {\r\n                                    sounds.play('click');\r\n                                    updateCountries[i].checked = !countries[i].checked;\r\n                                    setCountries(updateCountries);\r\n                                } else {\r\n                                    // sounds.play('wrong');\r\n                                    // setStatus('wrong');\r\n                                    // setButtonText('Select a maximum of 4 countries');\r\n                                }\r\n                                if (isAllChecked()) {\r\n                                    console.log('WINNIG' + checkAnswers());\r\n                                    if (checkAnswers()) {\r\n                                        sounds.play('correct');\r\n                                        setStatus('correct');\r\n                                        setButtonText('Goed');\r\n                                        setFinished('selectGame');\r\n                                    } else {\r\n                                        sounds.play('wrong');\r\n                                        setStatus('wrong');\r\n                                        setButtonText('Antwoord onjuist');\r\n                                    }\r\n                                } else {\r\n                                    setStatus('hidden');\r\n                                }\r\n                            }}\r\n                        >{country.name}\r\n                            {country.checked ? <CheckSquare /> : <Square />}\r\n\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SelectGame\r\n","import { useState } from 'react';\r\nimport TypeGame from './TypeGame';\r\nimport DragGame from './DragGame';\r\nimport Sounds from './SamplePlayer';\r\nimport SelectGame from './SelectGame';\r\nimport Header from './Header';\r\n\r\nfunction App() {\r\n\r\n  const sounds = new Sounds();\r\n\r\n  // prevent scrolling\r\n  function preventBehavior(e) {\r\n    e.preventDefault();\r\n  }\r\n  document.addEventListener(\"touchmove\", preventBehavior, { passive: false });\r\n\r\n  const [showGame, setShowGame] = useState(0);\r\n  // const [dragGameFinished, setDragGameFinished] = useState(false);\r\n  const [finishedGames, setFinishedGames] = useState({\r\n    dragGame: false,\r\n    typeGame: false,\r\n    selectGame: false\r\n  });\r\n\r\n\r\n\r\n  function setFinished(game) {\r\n    setFinishedGames({ ...finishedGames, [`${game}`]: true });\r\n    setTimeout(() => setShowGame(0), 2000);\r\n  }\r\n\r\n  return (\r\n    <div id=\"home\" class=\"app\">\r\n      {/* <Header\r\n        setShowGame={setShowGame}\r\n        headerText={'Escape Room - Eethuis Vers (versie13-11)'}\r\n      /> */}\r\n\r\n      {showGame !== 0 || (\r\n        <button onClick={() => {\r\n          setShowGame(1);\r\n          sounds.play('click');\r\n        }\r\n        } type=\"button\"\r\n          className={'btn btn-lg btn-primary app ' + (finishedGames.dragGame ? 'finished' : '')}\r\n        >play drag game</button>\r\n      )}\r\n      {showGame !== 0 || (\r\n        <button onClick={() => {\r\n          setShowGame(2);\r\n          sounds.play('click');\r\n        }\r\n        } type=\"button\"\r\n          className={'btn btn-lg btn-primary app ' + (finishedGames.typeGame ? 'finished' : '')}\r\n        >play type game</button>\r\n      )}\r\n      {showGame !== 0 || (\r\n        <button onClick={() => {\r\n          setShowGame(3);\r\n          sounds.play('click');\r\n        }\r\n        } type=\"button\"\r\n          className={'btn btn-lg btn-primary app ' + (finishedGames.selectGame ? 'finished' : '')}\r\n        >play select game</button>\r\n      )}\r\n      {showGame === 1 && <DragGame setFinished={setFinished} setShowGame={setShowGame} />}\r\n      {showGame === 2 && <TypeGame setFinished={setFinished} setShowGame={setShowGame} />}\r\n      {showGame === 3 && <SelectGame setFinished={setFinished} setShowGame={setShowGame} />}\r\n      {/* {dragGameFinished && <h1 style={{ color: 'white' }} >drag game finished!</h1>} */}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}