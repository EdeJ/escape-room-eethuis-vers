{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","gsap","registerPlugin","Draggable","useEffect","document","getElementById","getElementsByClassName","targets","$","draggables","top","offset","height","dragList","dropList","distance","i","length","css","left","create","bounds","type","throwProps","onDragStart","e","onDrag","this","hitTest","addClass","removeClass","target","id","data","onDragEnd","hasClass","p","position","console","log","to","duration","x","y","addEventListener","preventDefault","passive","style","bottem","onClick","answerList","myArray","Array","prototype","slice","call","childNodes","isArray","newArray","map","node","toString","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.875e0263.chunk.js","sourcesContent":["import { useEffect } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport './App.css';\r\nimport gsap from 'gsap';\r\nimport Draggable from \"gsap/Draggable\";\r\nimport { ArrowsMove } from 'react-bootstrap-icons';\r\nimport $ from 'jquery';\r\n\r\nfunction App() {\r\n  gsap.registerPlugin(Draggable);\r\n  const winningOrder = \"3,2,1,0\";\r\n\r\n  useEffect(() => {\r\n    const sourceList = document.getElementById(\"source-list\");\r\n    const destinationList = document.getElementById(\"destination-list\");\r\n    const coffeeDragable = document.getElementsByClassName(\"list-group-item\");\r\n\r\n    const targets = $(\".target\");\r\n    const draggables = $('.draggable');\r\n    const overlapThreshold = \"0%\";\r\n\r\n    let top = $('#shared-lists').offset().top + $('.draggable').height();\r\n    const dragList = $('#source-list');\r\n    const dropList = $('#destination-list');\r\n    const distance = $('#shared-lists').height() / 4;\r\n\r\n    for (let i = 0; i < draggables.length; i++) {\r\n      $(draggables[i]).css({ \"position\": \"absolute\", \"top\": `${top}px`, \"left\": `${dragList.left}px` });\r\n      $(targets[i]).css({ \"position\": \"absolute\", \"top\": `${top}px`, \"left\": `${dropList.left}px` });\r\n      top = top + distance;\r\n    }\r\n\r\n    Draggable.create(\".draggable\", {\r\n      bounds: \"#content\",\r\n      // edgeResistance: 0.65,\r\n      type: \"x,y\",\r\n      throwProps: true,\r\n      onDragStart: function (e) {\r\n\r\n      },\r\n\r\n      onDrag: function (e) {\r\n\r\n        for (let i = 0; i < targets.length; i++) {\r\n          if (this.hitTest(targets[i], overlapThreshold)) {\r\n            $(targets[i]).addClass(\"showOver\");\r\n          } else {\r\n            $(targets[i]).removeClass(\"showOver\");\r\n          }\r\n          if (e.target.id === $(targets[i]).data('dragItemId')) {\r\n            $(targets[i]).removeClass(\"occupied\");\r\n          }\r\n        }\r\n      },\r\n\r\n      onDragEnd: function (e) {\r\n        // var snapMade = false;\r\n        for (let i = 0; i < targets.length; i++) {\r\n          if (this.hitTest(targets[i], overlapThreshold)) {\r\n\r\n            if (!$(targets[i]).hasClass(\"occupied\")) {\r\n\r\n              let p = $(targets[i]).position();\r\n\r\n              console.log('addClass(\"occupied\")');\r\n              $(targets[i]).addClass(\"occupied\");\r\n\r\n              // tween onto target\r\n              gsap.to(e.target, { duration: 0.1, left: p.left, top: p.top, x: 0, y: 0 });\r\n              // $(targets[i]).data('dragItem', e.target);\r\n\r\n              $(targets[i]).data('dragItemId', e.target.id);\r\n              // $('#0').data('myval', 20); //setter\r\n              // console.log($(targets[i]).data('dragItem'));\r\n              // let test = $(targets[i]).data('dragItem')\r\n              // $(test).css('background-color', 'red');\r\n              // console.log(test);\r\n\r\n            }\r\n          }\r\n        }\r\n\r\n        // if the dragged item isn't over a target send it back to its\r\n        // start position\r\n        // if (!snapMade) {\r\n        //     if (e.target.targetAttachedTo != undefined) {\r\n        //         e.target.targetAttachedTo.removeClass(\"occupied\");\r\n        //     };\r\n        //     //  gsap.to(e.target, 0.1, { x: 0, y: 0, top: e.target.originalTop, left: e.target.originalLeft });\r\n        // }\r\n        console.log('All targets: ', targets);\r\n      }\r\n    })\r\n\r\n    // prevent scrolling\r\n    function preventBehavior(e) {\r\n      e.preventDefault();\r\n    }\r\n    document.addEventListener(\"touchmove\", preventBehavior, { passive: false });\r\n\r\n  }, []);\r\n\r\n  function checkAnswer() {\r\n\r\n    console.log('check');\r\n    const answerList = document.getElementById('destination-list');\r\n    // answerList.forEach(element => {\r\n    //   console.log(element.id);\r\n    // });\r\n    // console.log(answerList);\r\n    const myArray = Array.prototype.slice.call(answerList.childNodes);\r\n\r\n    console.log(Array.isArray(myArray));\r\n    console.log(myArray);\r\n\r\n    // const newArray = myArray.reduce((acc, node) => {\r\n    //   return acc + node.id;\r\n    // }, []);\r\n    const newArray = myArray.map(node => (node.id));\r\n    console.log('TO STRING' + newArray.toString());\r\n    console.log('is EQUEL??? : ' + (newArray.toString() === winningOrder));\r\n\r\n    console.log('reduced array', newArray);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <button style={{ position: 'absolute', bottem: '0' }} onClick={checkAnswer} type=\"button\" className=\"btn btn-lg btn-primary\">Controleer Antwoord</button>\r\n      <h4>1. Zet de volgende koffiesoorten in de volgorde van hoeveelheid melk (versie 2)</h4>\r\n      <div id=\"content\">\r\n        <div id=\"shared-lists\">\r\n          <div className=\"list-box\" id=\"source-list\" >\r\n            <div id=\"2\" className=\"box draggable\">Latte<ArrowsMove className='arrow' /></div>\r\n            <div id=\"0\" className=\"box draggable\">Espresso macchiato<ArrowsMove className='arrow' /></div>\r\n            <div id=\"3\" className=\"box draggable\">Cortado<ArrowsMove className='arrow' /></div>\r\n            <div id=\"1\" className=\"box draggable\">Cappucino<ArrowsMove className='arrow' /></div>\r\n          </div>\r\n          <div className=\"list-box\" id=\"destination-list\">\r\n            <div id=\"0\" className=\"box target\"></div>\r\n            <div id=\"1\" className=\"box target\"></div>\r\n            <div id=\"2\" className=\"box target\"></div>\r\n            <div id=\"3\" className=\"box target\"></div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n    </>\r\n  )\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}